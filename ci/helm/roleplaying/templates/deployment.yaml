apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "roleplaying.fullname" . }}
  annotations:
    configmap.reloader.stakater.com/reload: '{{ .Release.Name }}-configmap'
  labels:
    app.kubernetes.io/name: {{ include "roleplaying.name" . }}
    helm.sh/chart: {{ include "roleplaying.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "roleplaying.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "roleplaying.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.container.port }}
            - containerPort: 8126
              name: traceport
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.container.port }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.container.port }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: '{{ .Release.Name }}-configmap'
                  key: environment.name
            - name: APP_PORT
              valueFrom:
                configMapKeyRef:
                  name: '{{ .Release.Name }}-configmap'
                  key: appPort
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.mysqlDatabase }}
            - name: MYSQL_USER
              value: {{ .Values.mysql.mysqlUser }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.mysqlPassword }}
            - name: DD_SERVICE_NAME
              value: {{ .Release.Name }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_TRACE_AGENT_PORT
              value: "8126"
            - name: DD_SERVICE_NAME
              value: {{ .Release.Name }}
            - name: DD_APM_ENV
              value: "env:{{ .Values.datadog.env }}"
            - name: DD_TRACE_GLOBAL_TAGS
              value: "env:{{ .Values.datadog.env }},service:{{ .Release.Name }}"
            - name: DD_TRACE_REPORT_HOSTNAME
              value: "true"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
